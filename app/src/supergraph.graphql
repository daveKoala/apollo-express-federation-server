schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Error401 {
  message: String
}

type NotFound {
  message: String
}

type Query {
  UserMeta(userId: ID!): UserMetaResult @join__field(graph: USERMETA)
}

type UserMeta
  @join__owner(graph: USERMETA)
  @join__type(graph: USERMETA, key: "userId")
{
  _id: String @join__field(graph: USERMETA)
  appVersion: String @join__field(graph: USERMETA)
  createdAt: String @join__field(graph: USERMETA)
  genericNotificationsEnabled: Boolean @join__field(graph: USERMETA)
  habitNotificationsEnabled: Boolean @join__field(graph: USERMETA)
  os: String @join__field(graph: USERMETA)
  osV: String @join__field(graph: USERMETA)
  systemNotificationsStatus: String @join__field(graph: USERMETA)
  updatedAt: String @join__field(graph: USERMETA)
  userId: ID! @join__field(graph: USERMETA)
}

union UserMetaResult = Error401 | NotFound | UserMeta

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  USERMETA @join__graph(name: "userMeta" url: "https://test-strata2-api.cirrus-connect.com/user-meta/graphql")
}
